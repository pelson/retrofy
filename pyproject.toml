[build-system]
requires = ["setuptools", "wheel", "setuptools_scm[toml]==7.* "]
build-backend = "setuptools.build_meta"

[project]
name = "retrofy"
dynamic = [
  "version",  # The version is taken directly from the repository, using setuptools-scm.
]
description = "A tool to convert modern Python typing to less modern Python versions"
readme = "README.md"
classifiers = [
  "Programming Language :: Python :: 3",
  "Operating System :: OS Independent",
]
authors = [
  { name = "Phil Elson", email = "philip.elson@cern.ch" },
]
# Specify the minimum Python version required. It is not safe to use
# this to control the *upper* version of Python.
requires-python = ">=3.7"

# The core dependencies of the project.
dependencies = [
  "libcst",
]

[project.optional-dependencies]
# The optional dependencies of the project, installable using the "extras" syntax.
test = [
  "pytest",
]
doc = [
]
dev = [
  # Dependencies for development of the project, such as type checkers,
  # linters, etc.
  # "requirement-for-development-purposes-only",

  # Include the "test" and "doc" dependencies in the dev dependencies.
  "retrofy[doc,test]",
]

[project.urls]
# Homepage = "<Insert your URL>"
# Repository = "<Insert your URL>"

[tool.setuptools.packages.find]
include = ["retrofy", "retrofy.*"]

[tool.setuptools.package-data]
# All package data which is tracked by git is included automatically due to
# include-package-data=true (the default) along with setuptools-scm. More details at:
# https://setuptools.pypa.io/en/latest/userguide/datafiles.html#include-package-data

[tool.setuptools_scm]
write_to = "retrofy/_version.py"

[project.entry-points.multistage_build]
# Declare automatic hooks for a multistage-build using project.
post-build-wheel = "retrofy.wheel_modifier:compatibility_via_import_hook"
post-build-editable = "retrofy.wheel_modifier:compatibility_via_rewrite"

[tool.acc_py_template]
features = [
  {name = "core", version = 2},
]
